# This workflow will build a Java project with Maven, and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-java-with-maven

# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

name: Java CI with Maven

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build:

    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        java-version: ["1.8"]

    steps:
    - uses: actions/checkout@v3
    - name: Set up JDK ${{ matrix.java-version }}

      uses: actions/setup-java@v3
      with:
        java-version: ${{ matrix.java-version }}
#        distribution: 'temurin'
        cache: maven
    - name: Build with Maven
#      run: mvn test --file pom.xml
#      run: mvn -Dtest=DemoTest test
      run: mvn -Dtest=DemoTest test surefire-report:report -Dsurefire.report.format=junit -Dsurefire.report.name=test-results-selenium-${{ matrix.java-version }}
#      run: pytest tests/functional_tests/demo_test.py --doctest-modules --junitxml=junit/test-results-selenium-${{ matrix.python-version }}.xml

    - name: Test Results Selenium
      uses: dorny/test-reporter@v1
      if: success() || failure()    # run this step even if previous step failed
      with:
        name: UI tests selenium            # Name of the check run which will be created
        path: target/surefire-reports/junit/test-results-selenium-${{ matrix.java-version }}.xml    # Path to test results
        reporter: java-junit        # Format of test results

